public final class slack/cli/AppleSiliconCompat {
	public static final field INSTANCE Lslack/cli/AppleSiliconCompat;
	public final fun isMacOS ()Z
	public final fun validate (Lkotlin/jvm/functions/Function0;)V
}

public final class slack/cli/AppleSiliconCompat$Arch : java/lang/Enum {
	public static final field ARM64 Lslack/cli/AppleSiliconCompat$Arch;
	public static final field Companion Lslack/cli/AppleSiliconCompat$Arch$Companion;
	public static final field X86_64 Lslack/cli/AppleSiliconCompat$Arch;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lslack/cli/AppleSiliconCompat$Arch;
	public static fun values ()[Lslack/cli/AppleSiliconCompat$Arch;
}

public final class slack/cli/AppleSiliconCompat$Arch$Companion {
	public final fun get ()Lslack/cli/AppleSiliconCompat$Arch;
}

public final class slack/cli/CliUtilKt {
	public static final fun cleanLineFormatting (Ljava/util/List;)Ljava/util/List;
	public static final fun filterByExtension (Lkotlin/sequences/Sequence;Ljava/lang/String;)Lkotlin/sequences/Sequence;
	public static final fun filterByName (Lkotlin/sequences/Sequence;Ljava/lang/String;Z)Lkotlin/sequences/Sequence;
	public static synthetic fun filterByName$default (Lkotlin/sequences/Sequence;Ljava/lang/String;ZILjava/lang/Object;)Lkotlin/sequences/Sequence;
	public static final fun skipBuildAndCacheDirs (Lkotlin/io/FileTreeWalk;)Lkotlin/io/FileTreeWalk;
}

public final class slack/cli/CliktExtensionsKt {
	public static final fun dryRunOption (Lcom/github/ajalt/clikt/core/CliktCommand;[Ljava/lang/String;Ljava/lang/String;)Lcom/github/ajalt/clikt/parameters/options/OptionWithValues;
	public static synthetic fun dryRunOption$default (Lcom/github/ajalt/clikt/core/CliktCommand;[Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lcom/github/ajalt/clikt/parameters/options/OptionWithValues;
	public static final fun projectDirOption (Lcom/github/ajalt/clikt/core/CliktCommand;[Ljava/lang/String;Ljava/lang/String;)Lcom/github/ajalt/clikt/parameters/options/OptionDelegate;
	public static synthetic fun projectDirOption$default (Lcom/github/ajalt/clikt/core/CliktCommand;[Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lcom/github/ajalt/clikt/parameters/options/OptionDelegate;
}

public abstract interface class slack/cli/CommandFactory {
	public abstract fun create ()Lcom/github/ajalt/clikt/core/CliktCommand;
	public abstract fun getDescription ()Ljava/lang/String;
	public abstract fun getKey ()Ljava/lang/String;
}

public final class slack/cli/CommandFactoryKt {
	public static final fun runCommand ([Ljava/lang/String;Z)V
	public static synthetic fun runCommand$default ([Ljava/lang/String;ZILjava/lang/Object;)V
}

public final class slack/cli/Toml {
	public static final field INSTANCE Lslack/cli/Toml;
	public final fun parseVersion (Ljava/io/File;)Ljava/util/Map;
}

public final class slack/cli/gradle/GradleProjectFlattenerCli : com/github/ajalt/clikt/core/CliktCommand {
	public static final field DESCRIPTION Ljava/lang/String;
	public fun <init> ()V
	public fun run ()V
}

public final class slack/cli/gradle/GradleProjectFlattenerCli$Factory : slack/cli/CommandFactory {
	public fun <init> ()V
	public fun create ()Lcom/github/ajalt/clikt/core/CliktCommand;
	public fun getDescription ()Ljava/lang/String;
	public fun getKey ()Ljava/lang/String;
}

public final class slack/cli/gradle/GradleSettingsVerifierCli : com/github/ajalt/clikt/core/CliktCommand {
	public static final field DESCRIPTION Ljava/lang/String;
	public fun <init> ()V
	public fun run ()V
}

public final class slack/cli/gradle/GradleSettingsVerifierCli$Factory : slack/cli/CommandFactory {
	public fun <init> ()V
	public fun create ()Lcom/github/ajalt/clikt/core/CliktCommand;
	public fun getDescription ()Ljava/lang/String;
	public fun getKey ()Ljava/lang/String;
}

public final class slack/cli/lint/LintBaselineMergerCli : com/github/ajalt/clikt/core/CliktCommand {
	public static final field DESCRIPTION Ljava/lang/String;
	public fun <init> ()V
	public fun run ()V
}

public final class slack/cli/lint/LintBaselineMergerCli$Factory : slack/cli/CommandFactory {
	public fun <init> ()V
	public fun create ()Lcom/github/ajalt/clikt/core/CliktCommand;
	public fun getDescription ()Ljava/lang/String;
	public fun getKey ()Ljava/lang/String;
}

public final class slack/cli/sarif/ApplyBaselinesToSarifs : com/github/ajalt/clikt/core/CliktCommand {
	public static final field DESCRIPTION Ljava/lang/String;
	public fun <init> ()V
	public fun run ()V
}

public final class slack/cli/sarif/ApplyBaselinesToSarifs$Factory : slack/cli/CommandFactory {
	public fun <init> ()V
	public fun create ()Lcom/github/ajalt/clikt/core/CliktCommand;
	public fun getDescription ()Ljava/lang/String;
	public fun getKey ()Ljava/lang/String;
}

public final class slack/cli/sarif/MergeSarifReports : com/github/ajalt/clikt/core/CliktCommand {
	public static final field DESCRIPTION Ljava/lang/String;
	public fun <init> ()V
	public fun run ()V
}

public final class slack/cli/sarif/MergeSarifReports$Factory : slack/cli/CommandFactory {
	public fun <init> ()V
	public fun create ()Lcom/github/ajalt/clikt/core/CliktCommand;
	public fun getDescription ()Ljava/lang/String;
	public fun getKey ()Ljava/lang/String;
}

public synthetic class slack/cli/sarif/SarifUtilKt$EntriesMappings {
	public static final synthetic field entries$0 Lkotlin/enums/EnumEntries;
}

public final class slack/cli/shellsentry/AnalysisResult {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lslack/cli/shellsentry/RetrySignal;ILkotlin/jvm/functions/Function1;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lslack/cli/shellsentry/RetrySignal;
	public final fun component4 ()I
	public final fun component5 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Lslack/cli/shellsentry/RetrySignal;ILkotlin/jvm/functions/Function1;)Lslack/cli/shellsentry/AnalysisResult;
	public static synthetic fun copy$default (Lslack/cli/shellsentry/AnalysisResult;Ljava/lang/String;Ljava/lang/String;Lslack/cli/shellsentry/RetrySignal;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lslack/cli/shellsentry/AnalysisResult;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConfidence ()I
	public final fun getExplanation ()Ljava/lang/String;
	public final fun getMessage ()Ljava/lang/String;
	public final fun getRetrySignal ()Lslack/cli/shellsentry/RetrySignal;
	public final fun getThrowableMaker ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class slack/cli/shellsentry/Issue {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lslack/cli/shellsentry/RetrySignal;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lslack/cli/shellsentry/RetrySignal;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lslack/cli/shellsentry/RetrySignal;Ljava/lang/String;Ljava/util/List;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lslack/cli/shellsentry/RetrySignal;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lslack/cli/shellsentry/RetrySignal;Ljava/lang/String;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Lslack/cli/shellsentry/RetrySignal;
	public final fun component5 ()Ljava/lang/String;
	public final fun component6 ()Ljava/util/List;
	public final fun component7 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lslack/cli/shellsentry/RetrySignal;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lslack/cli/shellsentry/Issue;
	public static synthetic fun copy$default (Lslack/cli/shellsentry/Issue;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lslack/cli/shellsentry/RetrySignal;Ljava/lang/String;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lslack/cli/shellsentry/Issue;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getGroupingHash ()Ljava/lang/String;
	public final fun getLogMessage ()Ljava/lang/String;
	public final fun getMatchingPatterns ()Ljava/util/List;
	public final fun getMatchingText ()Ljava/util/List;
	public final fun getMessage ()Ljava/lang/String;
	public final fun getRetrySignal ()Lslack/cli/shellsentry/RetrySignal;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class slack/cli/shellsentry/IssueJsonAdapter : com/squareup/moshi/JsonAdapter {
	public fun <init> (Lcom/squareup/moshi/Moshi;)V
	public fun fromJson (Lcom/squareup/moshi/JsonReader;)Ljava/lang/Object;
	public fun toJson (Lcom/squareup/moshi/JsonWriter;Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public abstract class slack/cli/shellsentry/NoStacktraceThrowable : java/lang/Throwable {
	public fun <init> (Ljava/lang/String;)V
	public fun fillInStackTrace ()Ljava/lang/Throwable;
}

public abstract interface class slack/cli/shellsentry/RetrySignal {
}

public final class slack/cli/shellsentry/RetrySignal$Ack : slack/cli/shellsentry/RetrySignal {
	public static final field INSTANCE Lslack/cli/shellsentry/RetrySignal$Ack;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class slack/cli/shellsentry/RetrySignal$RetryDelayed : slack/cli/shellsentry/RetrySignal {
	public synthetic fun <init> (JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1-UwyO8pc ()J
	public final fun copy-LRDsOJo (J)Lslack/cli/shellsentry/RetrySignal$RetryDelayed;
	public static synthetic fun copy-LRDsOJo$default (Lslack/cli/shellsentry/RetrySignal$RetryDelayed;JILjava/lang/Object;)Lslack/cli/shellsentry/RetrySignal$RetryDelayed;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDelay-UwyO8pc ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class slack/cli/shellsentry/RetrySignal$RetryImmediately : slack/cli/shellsentry/RetrySignal {
	public static final field INSTANCE Lslack/cli/shellsentry/RetrySignal$RetryImmediately;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class slack/cli/shellsentry/RetrySignal$Unknown : slack/cli/shellsentry/RetrySignal {
	public static final field INSTANCE Lslack/cli/shellsentry/RetrySignal$Unknown;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class slack/cli/shellsentry/RetrySignalJsonAdapter : com/squareup/moshi/JsonAdapter {
	public fun <init> (Lcom/squareup/moshi/Moshi;)V
	public fun fromJson (Lcom/squareup/moshi/JsonReader;)Ljava/lang/Object;
	public fun toJson (Lcom/squareup/moshi/JsonWriter;Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class slack/cli/shellsentry/RetrySignal_RetryDelayedJsonAdapter : com/squareup/moshi/JsonAdapter {
	public fun <init> (Lcom/squareup/moshi/Moshi;)V
	public fun fromJson (Lcom/squareup/moshi/JsonReader;)Ljava/lang/Object;
	public fun toJson (Lcom/squareup/moshi/JsonWriter;Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public final class slack/cli/shellsentry/ShellSentry {
	public static final field Companion Lslack/cli/shellsentry/ShellSentry$Companion;
	public fun <init> (Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;Lslack/cli/shellsentry/ShellSentryConfig;ZZZLkotlin/jvm/functions/Function1;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;Lslack/cli/shellsentry/ShellSentryConfig;ZZZLkotlin/jvm/functions/Function1;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun copy (Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;Lslack/cli/shellsentry/ShellSentryConfig;ZZZLkotlin/jvm/functions/Function1;Ljava/util/List;)Lslack/cli/shellsentry/ShellSentry;
	public static synthetic fun copy$default (Lslack/cli/shellsentry/ShellSentry;Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;Lslack/cli/shellsentry/ShellSentryConfig;ZZZLkotlin/jvm/functions/Function1;Ljava/util/List;ILjava/lang/Object;)Lslack/cli/shellsentry/ShellSentry;
	public fun equals (Ljava/lang/Object;)Z
	public final fun exec ()V
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class slack/cli/shellsentry/ShellSentry$Companion {
	public final fun create ([Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lslack/cli/shellsentry/ShellSentry;
}

public final class slack/cli/shellsentry/ShellSentryCli : com/github/ajalt/clikt/core/CliktCommand {
	public static final field DESCRIPTION Ljava/lang/String;
	public fun <init> ()V
	public fun run ()V
}

public final class slack/cli/shellsentry/ShellSentryCli$Factory : slack/cli/CommandFactory {
	public fun <init> ()V
	public fun create ()Lcom/github/ajalt/clikt/core/CliktCommand;
	public fun getDescription ()Ljava/lang/String;
	public fun getKey ()Ljava/lang/String;
}

public final class slack/cli/shellsentry/ShellSentryConfig {
	public fun <init> ()V
	public fun <init> (ILjava/lang/String;Ljava/util/List;I)V
	public synthetic fun <init> (ILjava/lang/String;Ljava/util/List;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/util/List;
	public final fun component4 ()I
	public final fun copy (ILjava/lang/String;Ljava/util/List;I)Lslack/cli/shellsentry/ShellSentryConfig;
	public static synthetic fun copy$default (Lslack/cli/shellsentry/ShellSentryConfig;ILjava/lang/String;Ljava/util/List;IILjava/lang/Object;)Lslack/cli/shellsentry/ShellSentryConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGradleEnterpriseServer ()Ljava/lang/String;
	public final fun getKnownIssues ()Ljava/util/List;
	public final fun getMinConfidence ()I
	public final fun getVersion ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class slack/cli/shellsentry/ShellSentryConfigJsonAdapter : com/squareup/moshi/JsonAdapter {
	public fun <init> (Lcom/squareup/moshi/Moshi;)V
	public fun fromJson (Lcom/squareup/moshi/JsonReader;)Ljava/lang/Object;
	public fun toJson (Lcom/squareup/moshi/JsonWriter;Ljava/lang/Object;)V
	public fun toString ()Ljava/lang/String;
}

public abstract interface class slack/cli/shellsentry/ShellSentryExtension {
	public abstract fun check (Ljava/lang/String;IZLjava/nio/file/Path;)Lslack/cli/shellsentry/AnalysisResult;
}

